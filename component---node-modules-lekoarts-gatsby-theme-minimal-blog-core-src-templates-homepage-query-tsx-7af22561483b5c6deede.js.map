{"version":3,"sources":["webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"names":["ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","map","tag","i","key","slug","as","Link","to","replaceSlashes","name","List","children","sx","mb","ul","margin","padding","li","listStyle","a","variant","layoutProps","_frontmatter","MDXContent","components","props","mdxType","parentName","action","method","placeholder","style","display","maxWidth","marginRight","marginBottom","type","backgroundColor","isMDXComponent","Homepage","posts","blogPath","siteTitle","useSiteMetadata","visuallyHidden","p","fontSize","mt","text","showTags","HomepageComponent","allPost","data","nodes","BlogListItem","post","color","title","date","Listing","className"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-7af22561483b5c6deede.js","sourcesContent":["import React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3 },\n      a: { variant: `links.listItem` },\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { Box, Button, Label, Input } from '@theme-ui/components';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`The Future Economies Reading Group is meeting monthly through 2021.`}</h1>\n    <p>{`We will discuss topics including:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Worker-owned cooperatives`}</li>\n      <li parentName=\"ul\">{`Worker self-directed non-profits`}</li>\n      <li parentName=\"ul\">{`Platform cooperatives`}</li>\n      <li parentName=\"ul\">{`Legislative efforts like the CA Cooperative Economy Act`}</li>\n      <li parentName=\"ul\">{`Commons-based peer production`}</li>\n      <li parentName=\"ul\">{`Community development financial institutions`}</li>\n    </ul>\n    <Box as='form' action=\"https://formspree.io/f/mnqogeqr\" method=\"POST\" mdxType=\"Box\">\n  <Input placeholder=\"Sign up by email\" style={{\n        display: 'inline',\n        maxWidth: '280px',\n        marginRight: '8px',\n        marginBottom: '8px'\n      }} type=\"email\" name=\"email\" mdxType=\"Input\" />\n  <Button style={{\n        backgroundColor: 'black'\n      }} mdxType=\"Button\">Sign up</Button>\n    </Box>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport { visuallyHidden } from \"../styles/utils\"\n// @ts-ignore\nimport Hero from \"../texts/hero\"\n// @ts-ignore\nimport Bottom from \"../texts/bottom\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  [key: string]: any\n}\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List sx={{ variant: `section_bottom` }}>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, Link as TLink } from \"theme-ui\"\nimport { Box } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <TLink as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </TLink>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"sourceRoot":""}